# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=record-query

matrix:
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-musl
      rust: stable
    - env: TARGET=x86_64-unknown-linux-musl
      rust: stable

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
      rust: stable
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
      rust: stable
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
      rust: stable

    # Other architectures
    - env: TARGET=aarch64-unknown-linux-gnu
      rust: stable
    - env: TARGET=armv7-unknown-linux-gnueabihf
      rust: stable
    - env: TARGET=mips-unknown-linux-gnu
      rust: stable
    - env: TARGET=mips64-unknown-linux-gnuabi64
      rust: stable
    - env: TARGET=mips64el-unknown-linux-gnuabi64
      rust: stable
    - env: TARGET=mipsel-unknown-linux-gnu
      rust: stable
    - env: TARGET=powerpc-unknown-linux-gnu
      rust: stable
    - env: TARGET=powerpc64-unknown-linux-gnu
      rust: stable
    - env: TARGET=powerpc64le-unknown-linux-gnu
      rust: stable
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
      rust: stable

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly
  allow_failures:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
      rust: stable
    - env: TARGET=i686-unknown-linux-musl
      rust: stable
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: stable
    - env: TARGET=x86_64-unknown-linux-musl
      rust: stable

    # OSX
    - env: TARGET=i686-apple-darwin
      rust: stable
      os: osx
    - env: TARGET=x86_64-apple-darwin
      rust: stable
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
      rust: stable
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
      rust: stable
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1
      rust: stable

    # Other architectures
    - env: TARGET=aarch64-unknown-linux-gnu
      rust: stable
    - env: TARGET=armv7-unknown-linux-gnueabihf
      rust: stable
    - env: TARGET=mips-unknown-linux-gnu
      rust: stable
    - env: TARGET=mips64-unknown-linux-gnuabi64
      rust: stable
    - env: TARGET=mips64el-unknown-linux-gnuabi64
      rust: stable
    - env: TARGET=mipsel-unknown-linux-gnu
      rust: stable
    - env: TARGET=powerpc-unknown-linux-gnu
      rust: stable
    - env: TARGET=powerpc64-unknown-linux-gnu
      rust: stable
    - env: TARGET=powerpc64le-unknown-linux-gnu
      rust: stable
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
      rust: stable

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true
  - export V8_LIBS=$PWD/v8-build/lib/libv8uber.a
  - export V8_SOURCE=$PWD/v8-build

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key: "${GITHUB_TOKEN}"
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
